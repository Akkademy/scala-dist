<?xml version = '1.0' encoding = 'UTF-8'?>
<!DOCTYPE article PUBLIC "-//Norman Walsh//DTD DocBook XML V3.1.7//EN">
<article>
  <artheader>
    <title>Scala Bazaars Reference Manual</title>
    <author>
      <firstname>Lex</firstname>
      <surname>Spoon</surname>
    </author>
  </artheader>
  <sect1><title>Overview</title>
    <para>aoeu</para>
  </sect1>
  <sect1><title>Architectural Concepts</title>
    <para>aoeu</para>
  </sect1>
  <sect1><title>Universe Definitions</title>
    <para>aoeu</para>
  </sect1>
  <sect1><title>Command-Line Interface</title>
    <sect2><title>Command Reference</title>
      <sect3><title>help</title>
    <para>aoeu</para>
      </sect3>
    </sect2>
    <sect2><title>Start Up and Settings</title>
    <para>aoeu</para>
    </sect2>
    <sect2><title>Overview</title>
    <para>aoeu</para>
    </sect2>
  </sect1>
  <sect1><title>Suggested Directory Layout</title>

    <para>Each sbaz repository has its own informal standards for the
    directory layout within a managed directory.  This section
    documents the emerging layout used in the main Scala bazaar.
    It is the standard for that repository, and it might serve
    as a guideline for other repositories.</para>

    <itemizedlist>
    <listitem><para><filename>lib</filename> -- Any jar file(s)
    associated with the package, especially those that are meant as
    libraries to be usable by other programs in the bazaar.  Jars
    placed in this directory are particularly easy to access, because
    both the generic <command>scala</command> script and most of the
    tool-running scripts in <filename>bin</filename> will
    automatically load classes from any jars in
    <filename>lib</filename>.  Normally, jar filenames in this
    directory do not include any version number.  A typical filename
    is <filename>sbaz.jar</filename>.</para></listitem>

    <listitem><para><filename>src</filename> -- Source code for the
    package.  This source code should be presented in a way that IDE's
    can find the code easily.  Thus far, packages install directories
    under <filename>src</filename> that parallel the dotted package
    paths from the Scala code.  For example, class
    <filename>sbaz.clui.CommandLine</filename> is found in a file
    named
    <filename>src/sbaz/clui/CommandLine.scala</filename>.</para></listitem>

    <listitem><para><filename>bin</filename> -- Command-line runnable
    scripts.  These are most easily created via the Scala ant tasks.
    As a special case, the <command>sbaz</command> tool will make
    files within <filename>bin</filename> be executable on platforms
    where that makes sense.</para></listitem>

    <listitem><para><filename>config</filename> -- Configuration
    files.  Packages should not include any files in this directory!
    They should look in this directory for optional user
    configuration.  If there is a single configuration file, it can be
    included directly in the <filename>config</filename> directory,
    e.g. with a name like <filename>config/sbaz.properties</filename>.
    If there is more than one configuration file for a package, then
    the files should be located in a subdirectory of
    <filename>config</filename> named after the package name.  For
    example, the <command>sbaz</command> package could include its
    configuration files in a directory anmed
    <filename>config/sbaz/</filename>.</para></listitem>

    <listitem><para><filename>misc</filename> -- Arbitrary files not
    included in any of the above.  All such files for a package should
    be included in a directory named after the package.  For example,
    the <command>sbaz</command> package includes miscellaneous files
    in the directory <filename>misc/sbaz/</filename>.
    </para></listitem> </itemizedlist>

    

  </sect1>

  <sect1><title>Common Configurations</title>
    <para>aoeu</para>
  </sect1>
  <sect1><title>Common Problems</title>
    <sect2><title>Firewalls and HTTP Proxies</title>
      <para><![CDATA[Sbaz (XXX macro-ize?) uses HTTP to communicate with universe servers.  If your network blocks HTTP access, then, you need to configure sbaz to use an HTTP proxy.  To do this, create a file named ]]><filename><![CDATA[config/sbaz.properties]]></filename><![CDATA[ in your managed directory, and give it the appropriate proxy settings, something like:]]></para>
      <blockquote><programlisting><![CDATA[http.proxySet=true
http.proxyHost=localhost
http.proxyPort=3128
]]></programlisting></blockquote>
    </sect2>
  </sect1>
</article>
