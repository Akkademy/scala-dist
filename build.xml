<?xml version="1.0" encoding="UTF-8"?>

<project name="sbaz" default="build">
  <!-- Set the following to your local sbaz-managed directory -->
  <property name="scala.home"      value="${user.home}/sbaz"/>

  <property name="scala.lib.dir"   value="${scala.home}/lib"/>
  <property name="junit.jar"       value="${scala.lib.dir}/junit.jar"/>
  <property name="servlet-api.jar" value="${scala.lib.dir}/servlet-api.jar"/>
  <property name="scala.comp.jar"  value="${scala.lib.dir}/scala-compiler.jar"/>
  <property name="scala.lib.jar"   value="${scala.lib.dir}/scala-library.jar"/>

  <property name="lib.dir"         value="${basedir}/lib"/>
  <property name="ant-contrib.jar" value="${lib.dir}/ant-contrib.jar"/>
  <property name="number.file"     value="${basedir}/build.number"/>
  <property name="build.dir"       value="${basedir}/build"/>
  <property name="build.pdf.dir"   value="${build.dir}/manual/pdf"/>
  <property name="build.html.dir"  value="${build.dir}/manual/html"/>
  <property name="dist.dir"        value="${basedir}/dists"/>


  <!-- Loading Scala tasks -->
  <taskdef resource="scala/tools/ant/antlib.xml">
    <classpath>
      <pathelement location="${scala.comp.jar}"/>
      <pathelement location="${scala.lib.jar}"/>
    </classpath>
  </taskdef>

  <target name="init">
    <echo level="verbose" message="ant-contrib.jar=${ant-contrib.jar}"/>
    <fail message="Additional Ant tasks in '${lib.dir}/' is not available">
      <condition><not>
        <available
          classname="net.sf.antcontrib.AntContribVersion"
          classpath="${ant-contrib.jar}"
        />
        </not></condition>
    </fail>
    <!-- Creating boot-level tasks -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
        <pathelement location="${ant-contrib.jar}"/>
      </classpath>
    </taskdef>
    <!-- Testing if everything is in place -->
    <echo level="verbose" message="scala.home=${scala.home}"/>
    <fail message="Scala installation directory '${scala.home}' is not available.
The software is available from http://scala.epfl.ch/">
      <condition><not>
          <available
            file="${scala.home}"
            type="dir"
          />
        </not></condition>
    </fail>
    <if><not><available file="${junit.jar}"/></not>
      <then>
        <exec executable="${scala.home}/bin/sbaz">
          <arg line="install junit"/>
        </exec>
      </then>
    </if>
    <if><not><available file="${servlet-api.jar}"/></not>
      <then>
        <exec executable="${scala.home}/bin/sbaz">
          <arg line="install servlet-api"/>
        </exec>
      </then>
    </if>
    <echo level="verbose" message="scala.comp.jar=${scala.comp.jar}"/>
    <fail message="Scala compiler in '${scala.lib.dir}/' is not available">
      <condition><not>
        <available
          classname="scala.tools.ant.Scalac"
          classpath="${scala.comp.jar}:${scala.lib.jar}"
        />
      </not></condition>
    </fail>
    <echo level="verbose" message="number.file=${number.file}"/>
    <fail message="Number file in '${basedir}/' is not available">
      <condition><not>
        <available file="${number.file}"/>
      </not></condition>
    </fail>
    <property file="${number.file}"/>

    <property name="version.number" value="${version.major}.${version.minor}"/>

    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
        <pathelement location="${scala.comp.jar}"/>
        <pathelement location="${scala.lib.jar}"/>
      </classpath>
    </taskdef>
  </target>

  <target name="build.main" depends="init">
    <mkdir dir="build/build.main"/>
    <scalac srcdir="src"
            destdir="build/build.main">
      <classpath>
        <!-- I have to add scala-library manually??  XXX -->
        <pathelement location="${scala.lib.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
      </classpath>
      <include name="**/*.scala"/>
    </scalac>

    <jar destfile="${build.dir}/sbaz.jar"
         basedir="build/build.main"/>
  </target>

  <target name="build.tests" depends="build.main">
    <mkdir dir="build/build.tests"/>
    <scalac srcdir="tests"
            destdir="build/build.tests">
      <classpath>
         <pathelement location="${scala.lib.jar}"/>
        <!-- how can the following be done in the bazaar?  I'd like sbazlib=junit.jar -->
        <pathelement location="${junit.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
        <pathelement location="build/sbaz.jar"/>
      </classpath>
      <include name="**/*.scala"/>
    </scalac>

    <jar
      destfile="${build.dir}/tests.jar"
      basedir="${build.dir}/build.tests"
    />
  </target>

  <target name="toolScripts">
    <mkdir dir="build/toolScripts"/>
    <scalascript
      file="build/toolScripts/sbaz"
      name="Scala Bazaars command-line client"
      class="sbaz.clui.CommandLine"
      version="${version.number}"
      bootclasspath="#SCALA_HOME#/lib/sbaz.jar:#SCALA_HOME#/misc/sbaz/scala-library.jar"
      javaFlags="-Xmx256M -Xms16M"
    />
  </target>

  <target name="manual.classes">
    <mkdir dir="${build.dir}/manual/classes"/>
    <scalac srcdir="doc/manual/"
            destdir="${build.dir}/manual/classes">
      <classpath>
        <pathelement location="${scala.lib.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
      </classpath>
      <include name="**/*.scala"/>
    </scalac>
  </target>

  <target name="manual.jar" depends="manual.classes">
    <jar
      destfile="${build.dir}/manual.jar"
      basedir="${build.dir}/manual/classes"/>
  </target>

  <target name="manual.pdf"
          depends="manual.pdf.check, manual.jar"
          unless="manual.pdf.uptodate">
    <mkdir dir="${build.pdf.dir}"/>
    <java
      classname="sbaz.manual.EmitLatex"
      output="${build.pdf.dir}/manual.tex">
      <classpath>
        <pathelement location="${scala.lib.jar}"/>
	<pathelement location="${build.dir}/manual.jar"/>
      </classpath>
    </java>
    <exec executable="pdflatex" dir="${build.pdf.dir}">
      <arg line="manual.tex"/>
    </exec>
  </target>

  <target name="manual.pdf.check" depends="manual.jar">
    <uptodate
      srcfile="${build.dir}/manual.jar"
      targetfile="${build.pdf.dir}/manual.pdf"
      property="manual.pdf.uptodate"
    />
  </target>

  <target name="manual.html"
          depends="manual.html.check, manual.jar"
          unless="manual.html.uptodate">
    <mkdir dir="${build.html.dir}"/>
    <java
      classname="sbaz.manual.EmitHtml"
      output="${build.html.dir}/manual.html">
      <classpath>
        <pathelement location="${scala.lib.jar}"/>
	<pathelement location="${build.dir}/manual.jar"/>
      </classpath>
    </java>
  </target>

  <target name="manual.html.check" depends="manual.jar">
    <uptodate
      srcfile="${build.dir}/manual.jar"
      targetfile="${build.html.dir}/manual.html"
      property="manual.html.uptodate"
    />
  </target>

  <target name="manual" depends="manual.html, manual.pdf"/>

  <target name="dist" depends="build.main, toolScripts, manual">
    <mkdir dir="${dist.dir}"/>
    <sbaz file="${dist.dir}/sbaz-${version.number}.sbp"
          adfile="${dist.dir}/sbaz-${version.number}.advert"
          name="sbaz"
          version="${version.number}"
          desc="The command-line interface to Scala Bazaars.  Scala Bazaars
let you share Scala packages and other goodies with other
Scala users."
          link="http://scala.epfl.ch/downloads/packages/sbaz-${version.number}.sbp">

      <libset dir="${build.dir}" includes="sbaz.jar"/>
      <binset dir="${build.dir}/toolScripts"/>
      <docset dir="${build.html.dir}"/>
      <docset dir="${build.pdf.dir}" includes="*.pdf"/>

      <!-- include the version of scala2-library used during compilation -->
      <miscset dir="${scala.lib.dir}" includes="scala-library.jar"/>
    </sbaz>

    <sbaz
       file="${dist.dir}/base-${base.version}.sbp" 
       adfile="${dist.dir}/base-${base.version}.advert"
       name="base"
       version="${base.version}"
       depends="sbaz, scala-library"      
       desc="This package depends on the basic packages that all managed directories
must include.  Each of these packages is either essential or is very
commonly used."
       link="http://scala.epfl.ch/downloads/packages/base-${base.version}.sbp">
    </sbaz>
  </target>
  	
  <target name="install" depends="dist">
    <exec executable="sbaz">
      <arg line="-v install -f ${dist.dir}/sbaz-${version.number}.sbp"/>
    </exec>
  </target>
    	
  <target name="boot" depends="dist">
    <remove dir="${build.dir}/sbaz"/>
    <mkdir dir="${build.dir}/sbaz"/>
    <unzip
      src="${dist.dir}/sbaz-${version.number}.sbp"
      dest="${build.dir}/sbaz"
    />
    <chmod dir="${build.dir}/sbaz/bin" excludes="*.bat" perm="ugo+rx"/>
    <exec executable="${build.dir}/sbaz/bin/sbaz">
      <arg line="setuniverse ${scala.home}/meta/universe"/>
    </exec>
    <for list="base,sbaz,sbaz-setup,scala-devel" param="package">
      <sequential>
        <exec executable="${build.dir}/sbaz/bin/sbaz">
          <arg line="install @{package}"/>
        </exec>
      </sequential>
    </for>
    <exec executable="${build.dir}/sbaz/bin/sbaz">
      <arg line="compact"/>
    </exec>
    <!-- 'zip' Ant task does NOT preserve permissions -->
    <delete>
      <fileset dir="${build.dir}" includes="*.zip"/>
    </delete>
    <exec dir="${build.dir}" executable="zip">
      <arg line="-rq9 ${dist.dir}/sbaz-boot-${version.number}.zip sbaz"/>
    </exec>
  </target>

  <macrodef name="remove">
    <attribute name="dir"/>
    <sequential>
      <delete
        dir="@{dir}"
        includeemptydirs="yes"
        quiet="yes"
        failonerror="no"
      />
    </sequential>
  </macrodef>

  <target
    name="clean"
    description="Cleans build files"
    depends="clean.build"
  />

  <target name="clean.build">
    <remove dir="${build.dir}"/>
  </target>

  <target name="clean.all">
    <remove dir="${build.dir}"/>
    <remove dir="${dist.dir}"/>
  </target>

  <target
    name="build"
    description="Build"
    depends="build.main, build.tests"
  />

</project>
